	# This file contains possible settings you can use to configure Attack Range

[global]
log_path = attack_range.log
# Sets the log_path for the logging file

log_level = INFO
# Sets the log level for the logging
# Possible values: INFO, ERROR

attack_range_password = I-l1ke-Attack-Range!
# Master password for all administrative accounts
# default I-l1ke-Attack-Range!

cloud_provider = aws
# cloud provider to deploy the Attack Range
# example_1: aws
# example_2: azure

[aws]
instance_type_ec2 = t2.2xlarge
# instance type for the aws ec2 instances

[range_settings]
key_name = attack-range-cloud
# Specify the name of the EC2 key pair name
# This is only needed for modes: terraform and packer

ip_whitelist = 0.0.0.0/0
# Specify the IP whitelist for the aws instances
# This allow comma-separated blocks
# ip_whitelist = 0.0.0.0/0,35.153.82.195/32

private_key_path = ~/.ssh/id_rsa
# Specify the path to your private SSH key
# This is only needed for modes: terraform and packer

region = eu-central-1
# Specify the aws region in which you want to build the attack range
# please ensure that aws_cli has the same region specified
# This is only needed for modes: terraform and 

public_key_path = ~/.ssh/id_rsa.pub
# Only for Azure needed

range_name = default
# Specify a unique name for the assets in a region
# Setting this allows you to deploy additional ranges with the same key_name
# An example would be for user1 and user2 testing in seperate environments
# or user1 testing multiple use cases.
# we suggest to use multiple attack_range.conf files when you deploy multiple
# attack ranges.


atomic_red_team_path =
# Clone atomic red team locally or use your fork: https://github.com/redcanaryco/atomic-red-team 
# Specify the path to atomic-red-team git repositorywhere the atomics are present
# Example: <path_to_cloned_repo>/atomic-red-team/atomics


[splunk_settings]

splunk_url = https://download.splunk.com/products/splunk/releases/8.0.5/linux/splunk-8.0.5-a1a6394cc5ae-Linux-x86_64.tgz
# Specify the download URL of Splunk Enterprise

splunk_binary = splunk-8.0.5-a1a6394cc5ae-Linux-x86_64.tgz
# Specify the name of the Splunk Enterprise executable

s3_bucket_url = https://attack-range-appbinaries.s3-us-west-2.amazonaws.com
# Specify the S3 bucket url from which you want to download the Splunk Apps

splunk_cim_app = splunk-common-information-model-cim_4160.tgz
# Specify the Splunk CIM App

splunk_escu_app = DA-ESS-ContentUpdate-latest.tar.gz
# Specify the Splunk ESCU App

splunk_asx_app = Splunk_ASX-latest.tar.gz
# Specify the Splunk ASX App

splunk_python_app = python-for-scientific-computing-for-linux-64-bit_200.tgz
# Specify the Splunk python for scientific computing dependency that is needed by the MLTK app

splunk_mltk_app = splunk-machine-learning-toolkit_510.tgz
# Specify the Splunk MLTK App

splunk_security_essentials_app = splunk-security-essentials_312.tgz
# Specify the Splunk SSE App

splunk_aws_app = splunk-add-on-for-amazon-web-services_500.tgz
# Specify the Splunk AWS App
# Will be only installed when attack_range_cloud=1


[phantom_settings]
phantom_community_username = user
# Specify the username needed to login to my.phantom.us to download Phantom
# This must be changed to a real username
# You can register under my.phantom.us

phantom_community_password = password
# Specify the password used to login to my.phantom.us to download Phantom
# This must be changed to a real password
# You can register under my.phantom.us

phantom_app = phantom-app-for-splunk_305.tgz


[enterprise_security]
install_es = 0
# Specify whether install Splunk Enterprise Security or not.
# Splunk Enterprise Security is a Splunk Premium App, that's why it needs to be downloaded and stored into apps folder.
# After installing ES, Splunk is available under https://[ip]:8000
# possible values: 1, 0

splunk_es_app = splunk-enterprise-security_620.spl
# Spefify the name of the Splunk Enterprise Security file, which you saved into the apps folder.


[mltk]
install_mltk = 0
# Specify whether install Splunk MLTK or not.
# After installing MLTK, Splunk is available under https://[ip]:8000
# possible values: 1, 0


[environment]
# specify your Attack Range environment by enabling (1) or disabling (0) machines

phantom_server = 0
# enable a phantom server
# possible values: 1, 0


[splunk_server]
# customize the splunk server

splunk_server_private_ip = 10.0.1.12
# specify the splunk server's private ip
# for mode terraform should be in subnet: 10.0.1.0/24


[phantom_server]
# customize the phantom server

phantom_server_private_ip = 10.0.1.13
# specify the phantom server's private ip
# for mode terraform should be in subnet: 10.0.1.0/24


[cloudtrail]
sqs_queue_url = 
# specify the sqs queue for the cloudtrail logs. Cloudtrail needs to be enabled and configured manually.
# more information can be found here: https://docs.splunk.com/Documentation/AddOns/released/AWS/CloudTrail


[kubernetes]
kubernetes = 0
# specify if you want to build a kubernetes cluster or not

cluster_version = 1.17
# specify the version of the kubernetes cluster


app = wordpress
# specify the app which you want to deploy to the kubernetes cluster
# helm is used to deploy the app

repo_name = bitnami
# specify the apps repository
# helm is used to deploy the app

repo_url = https://charts.bitnami.com/bitnami
# specify the url of the repository
# helm is used to deploy the app

